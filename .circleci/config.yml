defaults: &defaults
  docker:
      #custom image with aws cli, and npm installed (https://github.com/Victorious/docker-builds-base-image)
      - image: $AWS_ACCOUNT_ID.$AWS_ECR_ADDRESS/$BUILD_IMAGE_REPO_NAME
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID  # can specify string literal values
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY  # or project UI envar reference

version: 2
jobs:
  run_tests:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run: npm install
      - run: npm rebuild node-sass
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Linting Project
          command: npm run lint
      - run:
          name: Running Tests
          command: npm test
      - run:
          name: Generate Static Bundle
          command: |
            if [ "${CIRCLE_BRANCH}" == "staging" ]
            then
              export BUNDLE_NAME=staging_build
            elif [ "${CIRCLE_BRANCH}" == "master" ]
            then
              export BUNDLE_NAME=prod_build
            else
              export BUNDLE_NAME=dev_build
            fi
            npm run $BUNDLE_NAME
      - run:
          name: Generate Code Coverage
          command: './node_modules/.bin/nyc report --reporter=text-lcov'
      - store_artifacts:
          path: coverage
          prefix: coverage
  build_image:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          version: 17.06.0-ce
      - run:
          name: Build Docker Image
          command: |
            docker build . -t $AWS_ACCOUNT_ID.$AWS_ECR_ADDRESS/$CIRCLE_PROJECT_REPONAME:$CIRCLE_BRANCH
      - run:
          name: Push Image to ECR
          command: |
            eval $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email | sed 's|https://||' | sed -e 's/-e none//g')
            docker push $AWS_ACCOUNT_ID.$AWS_ECR_ADDRESS/$CIRCLE_PROJECT_REPONAME:$CIRCLE_BRANCH
  deploy_image:
    <<: *defaults
    steps:
      - checkout

      - setup_remote_docker:
          version: 17.06.0-ce

      - run:
          name: Deploy to ECS
          command: ./deploy.sh

workflows:
  version: 2
  build_and_dockerize:
    jobs:
      - run_tests:
          context: org-global
          filters:
              branches:
                  ignore:
                      - staging
                      - master

      - build_image:
          context: org-global
          requires:
            - run_tests

      - deploy_image:
          context: org-global
          requres:
            - build_image
          # add back when its working end to end.
          # filters:
          #     branches:
          #       only:
          #         - dev
          #         - staging
          #         - master

